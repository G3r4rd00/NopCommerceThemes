@{
    Layout = "_Root.Head";
}

@{
    var controllerName = Url.ActionContext.RouteData.Values["controller"].ToString();
    var isHomePage = controllerName.Equals("home", StringComparison.InvariantCultureIgnoreCase);
}

@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyStartHtmlTagAfter })
@{ await Html.RenderPartialAsync("_Notifications"); }
@{ await Html.RenderPartialAsync("_JavaScriptDisabledWarning"); }
@{ await Html.RenderPartialAsync("_OldInternetExplorerWarning"); }
@await Component.InvokeAsync(typeof(AdminHeaderLinksViewComponent))
@{ await Html.RenderPartialAsync("_Header"); }
<div class="overlayOffCanvas"></div>
<div class="responsive-nav-wrapper-parent">
    <div class="responsive-nav-wrapper">
        <div class="menu-title">
            <span>@T("SevenSpikes.Themes.Common.MenuTitle")</span>
        </div>
        <div class="search-wrap">
            <span>@T("Search")</span>
            <div class="search-box store-search-box">
                @await Component.InvokeAsync(typeof(SearchBoxViewComponent))
            </div>
        </div>
        <div class="filters-button">
            <span>@T("SevenSpikes.Themes.Common.Filters")</span>
        </div>
    </div>
</div>
<div class="justAFixingDivBefore"></div>
<div class="header-menu">
    <div class="close-menu">
        <span>@T("SevenSpikes.Themes.Common.CloseMenu")</span>
    </div>
        @{
            var menu = await Component.InvokeAsync("Widget", new { widgetZone = "theme_header_menu" });
            var topMenu = await (await Component.InvokeAsync(typeof(TopMenuViewComponent))).RenderHtmlContentAsync();
        }
            @if (String.IsNullOrEmpty(await menu.RenderHtmlContentAsync()))
            {
                @Html.Raw(topMenu)
            }
            else
            { 
                @menu 
            }
</div>
@if (isHomePage)
{
        @await Component.InvokeAsync("Widget", new { widgetZone = "home_page_main_slider"});
}
<div class="master-wrapper-page">
    @await Html.PartialAsync("_JavaScriptDisabledWarning")
    <div class="master-wrapper-content">
        <script asp-location="Footer">
		var localized_data = {
	            AjaxCartFailure: "@T("AjaxCart.Failure")"
	        };
            AjaxCart.init(false, '.shopping-cart-link .cart-qty', '.header-links .wishlist-qty', '#flyout-cart', localized_data);
        </script>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentBefore })
        @*ajax loading window*@
        <div class="ajax-loading-block-window" style="display: none">
            <div class="loading-image">
            </div>
        </div>
        <div class="master-column-wrapper">
            @RenderBody()
        </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentAfter })
    </div>
</div>
 @await Component.InvokeAsync(typeof(FooterViewComponent))
@await Component.InvokeAsync(typeof(EuCookieLawViewComponent))
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyEndHtmlTagBefore })
