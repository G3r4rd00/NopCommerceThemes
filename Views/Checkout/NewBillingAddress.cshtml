@model CheckoutBillingAddressModel

@*<div class="title">
    <strong>@T("Checkout.EnterBillingAddress")</strong>
</div>*@

@if (Model.EuVatEnabled)
{
    <div class="inputs">
        <label asp-for="VatNumber" asp-postfix=":"></label>
        @if (Model.EuVatEnabledForGuests)
        {
            <input asp-for="VatNumber" />
            <span asp-validation-for="VatNumber"></span>
        }
        else
        {
            <span class="vat-number-warning">
                @T("Checkout.VatNumber.Disabled", Url.RouteUrl("CustomerInfo"))
            </span>
        }
    </div>
}
<div class="enter-address">
    <div asp-validation-summary="ModelOnly" class="message-error"></div>
    @{
        var dataDictAddress = new ViewDataDictionary(ViewData);
        dataDictAddress.TemplateInfo.HtmlFieldPrefix = "BillingNewAddress";
        @await Html.PartialAsync("_CreateOrUpdateAddress", Model.BillingNewAddress, dataDictAddress)
    }
</div>

<div class="buttons">
   @* <button id="billingaddress-save-button" type="button" class="button-1" style="display: none" onclick="CheckoutBilling.saveEditAddress('@(storeLocation)checkout/SaveEditBillingAddress/'); return false;">@T("Common.Save")</button>*@
    <button id="billingaddress-cancel-button" type="button" class="button-1" onclick="setLocation('@Url.RouteUrl("CheckoutBillingAddress")')">@T("Common.Cancel")</button>
    <button id="billingaddress-next-button" type="submit" name="nextstep" class="button-1 new-address-next-step-button">@T("Checkout.NextButton")</button>
</div>